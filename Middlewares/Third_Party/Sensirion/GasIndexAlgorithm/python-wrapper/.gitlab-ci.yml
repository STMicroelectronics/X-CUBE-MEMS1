include:
  - project: 'Sensirion/Python/ci-config-python'
    ref: master
    file: 'gitlab-ci-template-v2.yml'

before_script:
  - cd python-wrapper

generate_swig_wrappers:
  stage: prepare
  tags:
    - linux
    - docker
  image: registry.gitlab.sensirion.lokal/sensirion/docker/docker-python:3.8-20.04-2.11.0
  script:
    - ./generate_swig_wrapper.sh
  artifacts:
    expire_in: 1 week
    untracked: true

check_rst_syntax:
  extends: .check_rst_syntax_v2

check_editorconfig:
  extends: .check_editorconfig_v2

py3p6_linux_build:
  extends: .py3p6_linux_build_v2
  artifacts:
    expire_in: 1 week
    paths:
      - python-wrapper/dist/

py3p8_linux_sdist:
  extends: .py3p8_linux_sdist_v2
  artifacts:
    expire_in: 1 week
    paths:
      - python-wrapper/dist/

py3p8_linux_build:
  extends: .py3p8_linux_build_v2
  artifacts:
    expire_in: 1 week
    paths:
      - python-wrapper/dist/

py3p8_64bit_win_build:
  extends: .py3p8_64bit_win_docker_build_v2
  artifacts:
    expire_in: 1 week
    paths:
      - python-wrapper/dist/

py3p8_osx_build:
  stage: build
  tags: [osx, python38]
  script:
    # avoid using new pip resolver as it takes a very long time to resolve dependencies
    - pip install --use-deprecated=legacy-resolver -e .[test]
    - pytest
    - python3 setup.py bdist_wheel
  artifacts:
    expire_in: 1 week
    paths:
      - python-wrapper/dist/

build_docs:
  stage: build
  tags: [ linux, docker ]
  image: registry.gitlab.sensirion.lokal/sensirion/docker/docker-python:3.8-20.04-2.11.0
  variables:
    SPHINXOPTS: "-W --keep-going"
  script:
    - python setup.py install
    - pip install -r docs/requirements.txt
    - cd docs
    - make html
  after_script:
    - mv python-wrapper/docs/_build/html/ public/  # everything in public/ will get published
  artifacts:
    paths: [public]
    expire_in: 1 week
    when: always

deploy_staging:
  extends: .deploy_staging_v2
  before_script:
    # For performance and stability reasons, use offline installation.
    - pip install --no-index --find-links=/pip devpi-client
    - cd python-wrapper

deploy_stable:
  extends: .deploy_stable_v2
  needs: [py3p8_linux_sdist, py3p8_64bit_win_build]
  environment:
    name: pypi.org
    url: https://pypi.org/project/sensirion-gas-index-algorithm/
  before_script:
    - cd python-wrapper
    - pip install twine~=1.12.1
  script:
    - PKG_VERSION=$(python setup.py --version --quiet | tail -n1)
    - TAG_VERSION=$(git describe --tags)
    - if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then echo "Tag Version ($TAG_VERSION) != Package Version ($PKG_VERSION)" && exit 1; fi
    - twine upload dist/*

deploy_docs:
  stage: deploy
  tags: [linux, docker]
  image: registry.gitlab.sensirion.lokal/sensirion/docker/docker-python:3.8-20.04-2.11.0
  dependencies: [build_docs]
  only: [master, tags]
  script:
    - cd ..
    - chmod 777 ./python-wrapper/ci/set_git_config.sh
    - ./python-wrapper/ci/set_git_config.sh
    - chmod 777 ./python-wrapper/ci/checkin_doc.sh
    - ./python-wrapper/ci/checkin_doc.sh